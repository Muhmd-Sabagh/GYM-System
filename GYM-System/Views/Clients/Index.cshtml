@model IEnumerable<GYM_System.Models.Client>

@{
    ViewData["Title"] = "Clients";
}

<h1 class="mb-4">Clients</h1>

<div class="d-flex justify-content-between align-items-center mb-3 gap-2">
    <div>
        <a asp-action="Create" class="btn btn-primary">Add New Client</a>
    </div>
    <div class="d-flex flex-column flex-md-row gap-2 align-self-end">
        <button type="button" class="btn btn-primary copy-link"
                data-url="https://forms.gle/dhvXWpDdbmi2GTwa7"
                onclick="copyToClipboard(this)">
            Initial Assessment Form
        </button>
        <button type="button" class="btn btn-primary copy-link"
                data-url="https://forms.gle/x9RrmFCFG3m87k8PA"
                onclick="copyToClipboard(this)">
            Updates Assessment Form
        </button>
    </div>
</div>

<!-- Sync Google Forms Section -->
<div class="card mb-4">
    <div class="card-header bg-dark">
        <h5 class="mb-0 text-white">Sync Google Forms</h5>
    </div>
    <div class="card-body">
        <form asp-action="SaveSpreadSheetSettings" method="post" id="settingForm">
            <div id="inputSection" style="display:none;">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="spreadsheetId" class="form-label">Google Sheet ID:</label>
                        <input type="text" id="spreadsheetId" name="spreadsheetId" class="form-control" value="@ViewBag.SheetId" required />
                        <div class="form-text">Find this in your Google Sheet URL (e.g., https://docs.google.com/spreadsheets/d/<b>YOUR_ID_HERE</b>/edit)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="initialAssessmentSheetRange" class="form-label">Initial Assessment Sheet Name & Range:</label>
                        <input type="text" id="initialAssessmentSheetRange" name="initialAssessmentSheetRange" class="form-control" value="@ViewBag.InitialAssessmentSheetNameAndRange" required />
                        <div class="form-text">e.g., 'SheetName!A:Z' (Adjust columns as per your form response sheet)</div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="updateFormSheetRange" class="form-label">Update Form Sheet Name & Range:</label>
                        <input type="text" id="updateFormSheetRange" name="updateFormSheetRange" class="form-control" value="@ViewBag.UpdateFormSheetNameAndRange" required />
                        <div class="form-text">e.g., 'SheetName!A:Z' (Adjust columns as per your update form response sheet)</div>
                    </div>
                </div>
                <div class="row mb-3 mx-1 gap-2">
                    <button type="submit" class="btn btn-primary col-sm-4 col-md-2">Save</button>
                    <button type="button" class="btn btn-outline-secondary col-sm-4 col-md-2" id="cancelBtn">Cancel</button>
                </div>
            </div>

            <div class="flex-column align-items-start" id="readonlySection">
                <div class="mb-3">
                    <p><strong>Google Sheet ID:</strong> @ViewBag.SheetId</p>
                </div>
                <div class="mb-3">
                    <button type="button" id="editBtn" class="btn btn-secondary">Edit Sheet Info</button>
                </div>
            </div>
        </form>
        <form asp-action="SyncGoogleForms" method="post" id="syncForm">
            <div class="col-md-5">
                <button type="submit" class="btn btn-success w-100">Sync Google Forms</button>
            </div>
        </form>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-header bg-primary">
        <h5 class="mb-0 text-white">Search & Filter Clients</h5>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index" id="searchFilterForm">
            <div class="row">
                <!-- Search Term Input -->
                <div class="col-md-3 mb-3">
                    <label for="searchTerm" class="form-label">Search:</label>
                    <input type="text" id="searchTerm" name="searchTerm" class="form-control"
                           value="@ViewBag.SearchTerm" placeholder="Name, Phone, Email, or Code" />
                </div>

                <!-- Subscription Status Filter -->
                <div class="col-md-2 mb-3">
                    <label for="statusFilter" class="form-label">Status:</label>
                    <select id="statusFilter" name="statusFilter" class="form-select">
                        <option value="">All Statuses</option>
                        @foreach (var status in ViewBag.SubscriptionStatuses as IEnumerable<SelectListItem>)
                        {
                            <option value="@status.Value" selected="@(ViewBag.StatusFilter == status.Value)">
                                @status.Text
                            </option>
                        }
                    </select>
                </div>

                <!-- Join Date From Filter -->
                <div class="col-md-2 mb-3">
                    <label for="joinDateFrom" class="form-label">Join From:</label>
                    <input type="date" id="joinDateFrom" name="joinDateFrom" class="form-control"
                           value="@ViewBag.JoinDateFrom" />
                </div>

                <!-- Join Date To Filter -->
                <div class="col-md-2 mb-3">
                    <label for="joinDateTo" class="form-label">Join To:</label>
                    <input type="date" id="joinDateTo" name="joinDateTo" class="form-control"
                           value="@ViewBag.JoinDateTo" />
                </div>

                <!-- Action Buttons -->
                <div class="col-md-3 mb-3 d-flex align-items-end gap-2">
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                    <a asp-action="Index" class="btn btn-outline-secondary">Clear All</a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Results Summary -->
@if (!string.IsNullOrEmpty(ViewBag.SearchTerm as string) ||
     !string.IsNullOrEmpty(ViewBag.StatusFilter as string) ||
     !string.IsNullOrEmpty(ViewBag.JoinDateFrom as string) ||
     !string.IsNullOrEmpty(ViewBag.JoinDateTo as string))
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i>
        Showing @Model.Count() client(s) matching your search criteria.
        <a asp-action="Index" class="alert-link">View all clients</a>
    </div>
}

<!-- Clients Table Container for AJAX updates -->
<div id="clientsTableContainer">
    @await Html.PartialAsync("_ClientsTablePartial", Model)
</div>

@section Scripts {
    <script>
        // Copy to clipboard functionality for form links
        function copyToClipboard(button) {
            const url = button.getAttribute('data-url');

            // Try modern API first
            if (navigator.clipboard && navigator.clipboard.writeText) {
                navigator.clipboard.writeText(url)
                    .then(() => showCopied(button))
                    .catch(err => {
                        console.warn('Clipboard API failed, using fallback:', err);
                        fallbackCopy(url, button);
                    });
            } else {
                // Always fallback for unsupported environments
                fallbackCopy(url, button);
            }
        }

        // Fallback for environments without navigator.clipboard
        function fallbackCopy(text, button) {
            const textarea = document.createElement('textarea');
            textarea.value = text;
            textarea.style.position = 'fixed'; // Prevent scroll to bottom
            textarea.style.opacity = '0'; // Invisible
            document.body.appendChild(textarea);
            textarea.focus();
            textarea.select();

            try {
                document.execCommand('copy');
                showCopied(button);
            } catch (err) {
                console.error('Fallback copy failed:', err);
                alert('Copy failed, please copy manually: ' + text);
            }

            document.body.removeChild(textarea);
        }

        // Show feedback to the user
        function showCopied(button) {
            const originalText = button.textContent;
            button.textContent = 'Link Copied!';
            setTimeout(() => {
                button.textContent = originalText;
            }, 2000);
        }

        // Google Sheets settings toggle functionality
        document.getElementById("editBtn").addEventListener("click", function () {
            document.getElementById("readonlySection").style.display = "none";
            document.getElementById("inputSection").style.display = "block";
        });

        document.getElementById("cancelBtn").addEventListener("click", function () {
            document.getElementById("readonlySection").style.display = "block";
            document.getElementById("inputSection").style.display = "none";
        });

        // Optional: Add Enter key support for search input
        document.getElementById('searchTerm').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                document.getElementById('searchFilterForm').submit();
            }
        });
    </script>
}