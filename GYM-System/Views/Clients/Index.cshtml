@model IEnumerable<GYM_System.Models.Client>

@{
    ViewData["Title"] = "Clients";
}

<h1 class="mb-4">Clients</h1>

<div class="d-flex justify-content-between align-items-center mb-3 gap-2">
    <div>
        <a asp-action="Create" class="btn btn-primary">Add New Client</a>
    </div>
    <div class="d-flex flex-column flex-md-row gap-2 align-self-end">
        <button type="button" class="btn btn-primary copy-link"
                data-url="https://forms.gle/vSMHQqUY314AxRtb6"
                onclick="copyToClipboard(this)">
            Initial Assessment Form
        </button>
        <button type="button" class="btn btn-primary copy-link"
                data-url="https://forms.gle/AMpcp9GvmbdgKNQ48"
                onclick="copyToClipboard(this)">
            Updates Assessment Form
        </button>
    </div>
</div>

<!-- Sync Google Forms Section -->
<div class="card mb-4">
    <div class="card-header bg-dark">
        <h5 class="mb-0 text-white">Sync Google Forms</h5>
    </div>
    <div class="card-body">
        <form asp-action="SaveSpreadSheetSettings" method="post" id="settingForm">
            <div id="inputSection" style="display:none;">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="spreadsheetId" class="form-label">Google Sheet ID:</label>
                        <input type="text" id="spreadsheetId" name="spreadsheetId" class="form-control" value="@ViewBag.SheetId" required />
                        <div class="form-text">Find this in your Google Sheet URL (e.g., https://docs.google.com/spreadsheets/d/<b>YOUR_ID_HERE</b>/edit)</div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="initialAssessmentSheetRange" class="form-label">Initial Assessment Sheet Name & Range:</label>
                        <input type="text" id="initialAssessmentSheetRange" name="initialAssessmentSheetRange" class="form-control" value="@ViewBag.InitialAssessmentSheetNameAndRange" required />
                        <div class="form-text">e.g., 'SheetName!A:Z' (Adjust columns as per your form response sheet)</div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="updateFormSheetRange" class="form-label">Update Form Sheet Name & Range:</label>
                        <input type="text" id="updateFormSheetRange" name="updateFormSheetRange" class="form-control" value="@ViewBag.UpdateFormSheetNameAndRange" required />
                        <div class="form-text">e.g., 'SheetName!A:Z' (Adjust columns as per your update form response sheet)</div>
                    </div>
                </div>
                <div class="row mb-3 mx-1 gap-2">
                    <button type="submit" class="btn btn-primary col-sm-4 col-md-2">Save</button>
                    <button type="button" class="btn btn-outline-secondary col-sm-4 col-md-2" id="cancelBtn">Cancel</button>
                </div>
            </div>

            <div class="flex-column align-items-start" id="readonlySection">
                <div class="mb-3">
                    <p><strong>Google Sheet ID:</strong> @ViewBag.SheetId</p>
                </div>
                <div class="mb-3">
                    <button type="button" id="editBtn" class="btn btn-secondary">Edit Sheet Info</button>
                </div>
            </div>
        </form>
        <form asp-action="SyncGoogleForms" method="post" id="syncForm">
            <div class="col-md-5">
                <button type="submit" class="btn btn-success w-100">Sync Google Forms</button>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Client Code</th>
                <th>Name</th>
                <th>Phone</th>
                <th>Email</th>
                <th>Join Date</th>
                <th>Form Code</th>
                <th>Subscription Status</th>
                <th>Diet Status</th>
                <th>Workout Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ClientCode)</td>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.JoinDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.FormCode)</td>
                    <td>
                        <span class="badge @(item.Status == GYM_System.Models.SubscriptionStatus.Active ? "bg-success" : (item.Status == GYM_System.Models.SubscriptionStatus.Expired ? "bg-warning text-dark" : "bg-secondary"))">
                            @Html.DisplayFor(modelItem => item.Status)
                        </span>
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.DietStatus)</td>
                    <td>@Html.DisplayFor(modelItem => item.WorkoutStatus)</td>
                    <td>
                        <a asp-action="ClientFile" asp-route-id="@item.Id" class="btn btn-sm btn-primary mb-1" title="Show Client Details"><i class="bi bi-eye"></i></a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-info mb-1" title="Edit Client Details"><i class="bi bi-pencil"></i></a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Delete Client"><i class="bi bi-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function copyToClipboard(button) {
            const url = button.getAttribute('data-url');

            // Try modern API first
            if (navigator.clipboard && navigator.clipboard.writeText) {
                navigator.clipboard.writeText(url)
                    .then(() => showCopied(button))
                    .catch(err => {
                        console.warn('Clipboard API failed, using fallback:', err);
                        fallbackCopy(url, button);
                    });
            } else {
                // Always fallback for unsupported environments
                fallbackCopy(url, button);
            }
        }

        // Fallback for environments without navigator.clipboard
        function fallbackCopy(text, button) {
            const textarea = document.createElement('textarea');
            textarea.value = text;
            textarea.style.position = 'fixed'; // Prevent scroll to bottom
            textarea.style.opacity = '0'; // Invisible
            document.body.appendChild(textarea);
            textarea.focus();
            textarea.select();

            try {
                document.execCommand('copy');
                showCopied(button);
            } catch (err) {
                console.error('Fallback copy failed:', err);
                alert('Copy failed, please copy manually: ' + text);
            }

            document.body.removeChild(textarea);
        }

        // Show feedback to the user
        function showCopied(button) {
            const originalText = button.textContent;
            button.textContent = 'Link Copied!';
            setTimeout(() => {
                button.textContent = originalText;
            }, 2000);
        }

        document.getElementById("editBtn").addEventListener("click", function () {
            document.getElementById("readonlySection").style.display = "none";
            document.getElementById("inputSection").style.display = "block";
        });

        document.getElementById("cancelBtn").addEventListener("click", function () {
            document.getElementById("readonlySection").style.display = "block";
            document.getElementById("inputSection").style.display = "none";
        });
    </script>
}
