@model GYM_System.ViewModels.ClientFileViewModel

@{
    ViewData["Title"] = $"Client File: {Model.Client.Name}";
}

<h1 class="mb-4">Client File: @Model.Client.Name (@Model.Client.ClientCode)</h1>

<div class="mb-4 d-flex flex-wrap gap-2">
    <a asp-action="Index" class="btn btn-secondary">Back to Clients List</a>
    <a asp-action="Edit" asp-route-id="@Model.Client.Id" class="btn btn-info">Edit Client Details</a>
</div>

<div class="card mb-4">
    <div class="card-header bg-dark">
        <h4 class="mb-0 text-white">Client Basic Information</h4>
    </div>
    <div class="card-body">
        <dl class="row mb-0">
            <dt class="col-sm-3">Client Code:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Client.ClientCode)</dd>

            <dt class="col-sm-3">Name:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Client.Name)</dd>

            <dt class="col-sm-3">Phone:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Client.Phone)</dd>

            <dt class="col-sm-3">Email:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Client.Email)</dd>

            <dt class="col-sm-3">Join Date:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Client.JoinDate)</dd>

            <dt class="col-sm-3">Form Code:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Client.FormCode)</dd>

            <dt class="col-sm-3">Subscription Status:</dt>
            <dd class="col-sm-9">
                <span class="badge @(Model.Client.Status == GYM_System.Models.SubscriptionStatus.Active ? "bg-success" : (Model.Client.Status == GYM_System.Models.SubscriptionStatus.Expired ? "bg-warning text-dark" : "bg-secondary"))">
                    @Html.DisplayFor(model => model.Client.Status)
                </span>
            </dd>

            <dt class="col-sm-3">Diet Status:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Client.DietStatus)</dd>

            <dt class="col-sm-3">Workout Status:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Client.WorkoutStatus)</dd>
        </dl>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-dark d-flex justify-content-between align-items-center">
        <h4 class="mb-0 text-white">Subscriptions</h4>
        <a asp-action="AddSubscription" asp-controller="Clients" asp-route-clientId="@Model.Client.Id" class="btn btn-sm btn-success">Add New Subscription</a>
    </div>
    <div class="card-body">
        @if (!Model.Subscriptions.Any())
        {
            <div class="alert alert-info mb-0">No subscriptions found for this client.</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th>Package</th>
                            <th>Start Date</th>
                            <th>Duration (Months)</th>
                            <th>End Date</th>
                            <th>Price</th>
                            <th>Currency</th>
                            <th>Payment Account</th>
                            <th>Renewal Count</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Subscriptions.OrderByDescending(s => s.StartDate))
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.PackageType.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.DurationMonths)</td>
                                <td>@(item.StartDate.AddMonths(item.DurationMonths).ToShortDateString())</td>
                                <td>@item.Price.ToString("F2")</td>
                                <td>@Html.DisplayFor(modelItem => item.Currency.Code)</td>
                                <td>@Html.DisplayFor(modelItem => item.PaymentAccount.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.RenewalCount)</td>
                                <td>
                                    <span class="badge @(item.IsActive ? "bg-success" : "bg-warning text-dark")">
                                        @(item.IsActive ? "Active" : "Expired")
                                    </span>
                                </td>
                                <td>
                                    <a asp-action="EditSubscription" asp-controller="Clients" asp-route-id="@item.Id" class="btn btn-sm btn-warning mb-1" title="Edit Subsciption"><i class="bi bi-pencil"></i></a>
                                    <a asp-action="DeleteSubscription" asp-controller="Clients" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Delete Subscription"><i class="bi bi-trash"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-dark d-flex justify-content-between align-items-center">
        <h4 class="mb-0 text-white">Initial Assessments</h4>
        <a asp-action="Create" asp-controller="ClientAssessments" asp-route-clientId="@Model.Client.Id" class="btn btn-sm btn-success">Add One Manually</a>
    </div>
    <div class="card-body">
        @if (!Model.ClientAssessments.Any())
        {
            <div class="alert alert-info mb-0">No initial assessments found for this client.</div>
        }
        else
        {
            <div class="table-responsive" style="max-height: 500px; overflow-y: auto;">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-dark sticky-top">
                        <tr>
                            <th scope="col">Date</th>
                            <th scope="col">Form Code</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ClientAssessments.OrderByDescending(ca => ca.Timestamp))
                        {
                            <tr>
                                <td>@item.Timestamp.ToShortDateString()</td>
                                <td>@Html.DisplayFor(modelItem => item.FormCode)</td>
                                <td>
                                    <a asp-action="Edit" asp-controller="ClientAssessments" asp-route-id="@item.Id" class="btn btn-sm btn-warning mb-1" title="Edit Assessment"><i class="bi bi-pencil"></i></a>
                                    <a asp-action="Delete" asp-controller="ClientAssessments" asp-route-id="@item.Id" class="btn btn-sm btn-danger mb-1" title="Delete Assessment"><i class="bi bi-trash"></i></a>
                                    <a href="#" class="btn btn-sm btn-info show-details-btn" data-id="@item.Id" data-type="assessment" title="Show Details"><i class="bi bi-eye"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-dark d-flex justify-content-between align-items-center">
        <h4 class="mb-0 text-white">Client Updates</h4>
        <a asp-action="Create" asp-controller="ClientUpdates" asp-route-clientId="@Model.Client.Id" class="btn btn-sm btn-success">Add One Manually</a>
    </div>
    <div class="card-body">
        @if (!Model.ClientUpdates.Any())
        {
            <div class="alert alert-info mb-0">No client updates found for this client.</div>
        }
        else
        {
            <div class="table-responsive" style="max-height: 500px; overflow-y: auto;">
                <table class="table table-striped table-hover table-bordered table-sm">
                    <thead class="table-dark sticky-top">
                        <tr>
                            <th scope="col">Date</th>
                            <th scope="col">Form Code</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ClientUpdates.OrderByDescending(cu => cu.Timestamp))
                        {
                            <tr>
                                <td>@item.Timestamp.ToShortDateString()</td>
                                <td>@Html.DisplayFor(modelItem => item.FormCode)</td>
                                <td>
                                    <a asp-action="Edit" asp-controller="ClientUpdates" asp-route-id="@item.Id" class="btn btn-sm btn-warning mb-1" title="Edit Update"><i class="bi bi-pencil"></i></a>
                                    <a asp-action="Delete" asp-controller="ClientUpdates" asp-route-id="@item.Id" class="btn btn-sm btn-danger mb-1" title="Delete Update"><i class="bi bi-trash"></i></a>
                                    <a href="#" class="btn btn-sm btn-info show-details-btn" data-id="@item.Id" data-type="update" title="Show Details"><i class="bi bi-eye"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-dark d-flex justify-content-between align-items-center">
        <h4 class="mb-0 text-white">Diet Plans</h4>
        <a asp-action="Index" asp-controller="DietPlanMaker" asp-route-clientId="@Model.Client.Id" class="btn btn-sm btn-success">Create New Diet Plan</a>
    </div>
    <div class="card-body">
        @if (!Model.DietPlans.Any())
        {
            <div class="alert alert-info mb-0">No diet plans found for this client.</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th>Plan Name</th>
                            <th>Created Date</th>
                            <th>General Notes</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.DietPlans.OrderByDescending(dp => dp.CreatedDate))
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.PlanName)</td>
                                <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.GeneralNotes)</td>
                                <td>
                                    <a asp-action="Index" asp-controller="DietPlanMaker" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-md-1 me-0 mb-1 mb-md-0" title="Edit Diet Plan"><i class="bi bi-pencil"></i></a>
                                    <a asp-action="Delete" asp-controller="DietPlanMaker" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Delete Diet Plan"><i class="bi bi-trash"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-dark d-flex justify-content-between align-items-center">
        <h4 class="mb-0 text-white">Workout Plans</h4>
        <a asp-action="Index" asp-controller="WorkoutPlanMaker" class="btn btn-sm btn-success">Create New Workout Plan</a>
    </div>
    <div class="card-body">
        @if (!Model.WorkoutPlans.Any())
        {
            <div class="alert alert-info mb-0">No workout plans found for this client.</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th>Plan Name</th>
                            <th>Created Date</th>
                            <th>General Notes</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.WorkoutPlans.OrderByDescending(wp => wp.CreatedDate))
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.PlanName)</td>
                                <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.GeneralNotes)</td>
                                <td>
                                    <a asp-action="Index" asp-controller="WorkoutPlanMaker" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-md-1 me-0 mb-1 mb-md-0" title="Edit Workout Plan"><i class="bi bi-pencil"></i></a>
                                    <a asp-action="Delete" asp-controller="WorkoutPlanMaker" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Delete Workout Plan"><i class="bi bi-trash"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<!-- Details Modal Structure -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark">
                <h5 class="modal-title text-white" id="detailsModalLabel">تفاصيل التقييم / التحديث</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detailsModalBody" style="direction: rtl; text-align: right;">
                <!-- Partial view content will be loaded here -->
                <p>جاري تحميل التفاصيل...</p>
            </div>
            <div class="modal-footer bg-dark justify-content-sm-start">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const detailsModal = new bootstrap.Modal(document.getElementById('detailsModal'));
            const detailsModalBody = document.getElementById('detailsModalBody');

            document.querySelectorAll('.show-details-btn').forEach(button => {
                button.addEventListener('click', async function (e) {
                    e.preventDefault();
                    const id = this.dataset.id;
                    const type = this.dataset.type; // 'assessment' or 'update'

                    detailsModalBody.innerHTML = '<p>جاري تحميل التفاصيل...</p>'; // Loading message
                    document.getElementById('detailsModalLabel').innerText = type === 'assessment' ? 'تفاصيل التقييم' : 'تفاصيل التحديث';
                    detailsModal.show();

                    try {
                        const url = type === 'assessment'
                            ? `/ClientAssessments/GetAssessmentDetails/${id}` // Call partial view action
                            : `/ClientUpdates/GetUpdateDetails/${id}`; // Call partial view action

                        const response = await fetch(url);
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        const htmlContent = await response.text();
                        detailsModalBody.innerHTML = htmlContent;
                    } catch (error) {
                        console.error('Error fetching details:', error);
                        detailsModalBody.innerHTML = '<p class="text-danger">حدث خطأ أثناء تحميل التفاصيل. يرجى المحاولة مرة أخرى.</p>';
                    }
                });
            });
        });
    </script>
}